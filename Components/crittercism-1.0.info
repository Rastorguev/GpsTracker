{"Name":"Crittercism","Id":878,"Alias":"crittercism","Description":"Crittercism is the leading mobile application performance management solution\nthat enables enterprises to deliver better mobile apps by monitoring,\nprioritizing, troubleshooting, and trending app performance.\n\n### Features\n* **Monitor** - Real-time crash and error alerting to identify issues before your users are affected.\n* **Prioritize** - Identify business critical issues by size of impact and prioritize by users affected.\n* **Troubleshoot** - Get fast, efficient root cause analysis by diving deep into app, device, carrier, user, and diagnostics data.\n* **Trend** - Report business trends and metrics to make sure you know you’re progressing towards your goal.\n\n### Learn more\n\nLearn more about Crittercism by visiting http://crittercism.com\n","Version":"1.0","Summary":"Crittercism’s mAPM solution enables enterprises to deliver better mobile apps by monitoring, prioritizing, troubleshooting, and trending app performance.","QuickStart":"\n### Initializing the SDK\n\nUse the ``Crittercism.Init`` API to initialize Crittercism.\n\n#### For Android Apps\n\nIn your main activity class:\n\n```csharp\n    using CrittercismAndroid;\n\n    protected override void OnCreate (Bundle bundle)\n    {\n        //Initialize Crittercism with your App ID from crittercism.com\n        Crittercism.Init( ApplicationContext, \"YOUR APP ID GOES HERE\");\n    }\n```\n\n#### For iOS Apps\n\nIn your AppDelegate.cs: \n\n```csharp\n    using CrittercismIOS;\n\n    public override bool FinishedLaunching (UIApplication application, NSDictionary launchOptions)\n    {\n        //Initialize Crittercism with your App ID from crittercism.com\n        Crittercism.Init(\"YOUR APP ID GOES HERE\");\n        return true;\n    }\n```\n\n### Logging Handled Exceptions\n\nUse the ``LogHandledException`` API to track error conditions that do not\nnecessarily cause a crash.\n\nHandled exceptions may be used for tracking exceptions caught in a try/catch\nblock, testing 3rd party SDKs, and monitoring areas in the code that may\ncurrently be using assertions. Handled exceptions can also be used to track\nerror events such as low memory warnings. For an introduction, see Handled\nExceptions.\n\nHandled Exceptions will be grouped by stacktrace, much like crash reports.\nHandled Exceptions may be viewed in the “Handled Exceptions” area of the\nCrittercism portal.\n\nHere’s an example of how to log a handled exception:\n\n```csharp\n    try {\n          throw new TestException();\n    } catch (System.Exception error) {\n          Crittercism.LogHandledException(error);\n    }\n```\n\n### Logging Breadcrumbs\n\nUse the ``LeaveBreadcrumb`` API to write to a chronological log that is reported\nwith crashes and handled exceptions.\n\nA breadcrumb is a developer-defined text string (up to 140 characters) that\nallows developers to capture app run-time information. Example breadcrumbs may\ninclude variable values, progress through the code, user actions, or low memory\nwarnings. For an introduction, see Breadcrumbs.\n\nHere’s an example of how to leave a breadcrumb:\n\n```csharp\n    Crittercism.LeaveBreadcrumb(\"User started level 5\");\n```\n\n### Logging User Metadata\n\nDevelopers can set user metadata to tracking information about individual\nusers. For an introduction, see User Metadata.\n\n#### Adding a Username\n\nSetting a username will allow the ability to monitor app performance for each\nuser. Once a username is set, the Crittercism portal’s “Search by User” feature\nmay be used to lookup a list of crashes and errors a specific user has\nexperienced. We recommend setting a username to a value that can be tied back\nto your customer support system.\n\nHere’s an example of how to set a user name:\n\n```csharp\n    Crittercism.Username = \"MommaCritter\";\n```\n\n#### Adding Arbitrary User Metadata\n\nUp to ten key/value pairs of arbitrary metadata may be set for each user. The\ndata will be displayed on the developer portal when viewing a user profile.\n\nHere’s an example of how to associate metadata with the current user:\n\n```csharp\n    Crittercism.SetMetadata(\"5\", \"GameLevel\");\n```\n\n### Other Resources\n\nView the full Crittercism documentation at http://docs.crittercism.com\n\n","Hash":"1c63d5f0529ada313d82010486c0ea84","TargetPlatforms":["ios","android"],"TrialHash":null}